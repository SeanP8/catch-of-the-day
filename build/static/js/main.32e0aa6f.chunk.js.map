{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/AddFishForm.js","components/EditFishForm.js","base.js","components/Login.js","components/Inventory.js","components/Order.js","sample-fishes.js","components/Fish.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","storeName","current","value","props","history","push","className","onSubmit","this","type","ref","required","placeholder","defaultValue","Component","Header","tagline","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","e","fish","name","price","parseFloat","status","desc","image","addFish","currentTarget","reset","EditFishForm","handleChange","console","log","updatedFish","updateFish","index","onChange","onClick","deleteFish","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","base","Rebase","createClass","database","Login","authenticate","Inventory","state","uid","owner","authHandler","authData","a","fetch","storeId","context","store","data","post","user","setState","propvider","authProvider","auth","signInWithPopup","then","logout","signOut","onAuthStateChanged","Object","keys","fishes","map","key","loadSampleFishes","Order","renderOrder","count","order","isAvailable","classNames","timeout","enter","exit","component","removeFromOrder","orderIds","total","reduce","prevTotal","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","details","src","alt","disabled","addToOrder","App","Date","now","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","document","querySelector"],"mappings":"6OAAO,SAASA,EAAYC,GAC1B,OAAQA,EAAQ,KAAKC,eAAe,QAAS,CAC3CC,MAAO,WACPC,SAAU,QAIP,SAASC,EAAMC,GACpB,OAAOA,EAAIC,KAAKC,MAAMD,KAAKE,SAAWH,EAAII,SAcrC,SAASC,IACd,IAAMC,EAAa,CACjB,WACA,YACA,QACA,OACA,UACA,QACA,YACA,WACA,OACA,cACA,gBACA,QACA,SACA,YACA,UACA,YACA,QACA,aACA,SACA,WACA,cACA,SACA,SACA,WACA,QACA,UACA,OACA,aACA,UACA,YACA,UACA,YACA,QACA,cACA,UACA,WAoCF,MAAM,GAAN,OAAUP,EAAMO,GAAhB,YAA+BP,EAAMO,GAArC,YAAoDP,EAjCtC,CACZ,QACA,MACA,WACA,QACA,OACA,SACA,SACA,OACA,QACA,SACA,SACA,QACA,QACA,QACA,SACA,WACA,WACA,QACA,OACA,QACA,SACA,aACA,WACA,YACA,QACA,SACA,SACA,YACA,WACA,U,IC3BWQ,E,4MA3DXC,QAAUC,IAAMC,Y,EAKhBC,UAAY,SAAAC,GACRA,EAAMC,iBACN,IAAMC,EAAY,EAAKN,QAAQO,QAAQC,MACvC,EAAKC,MAAMC,QAAQC,KAAnB,iBAAkCL,K,4CAEtC,WACI,OACI,0BAAMM,UAAU,iBAAiBC,SAAUC,KAAKX,WAC5C,gDACA,2BACIY,KAAK,OACLC,IAAKF,KAAKd,QACViB,UAAQ,EAACC,YAAY,aACrBC,aAActB,MAElB,4BAAQkB,KAAK,UAAb,oB,GArBUd,IAAMmB,W,QCkBjBC,EApBA,SAACZ,GAAD,OACX,4BAAQG,UAAU,OACd,oCAEK,0BAAMA,UAAU,SACb,0BAAMA,UAAU,MAAhB,MACA,0BAAMA,UAAU,OAAhB,QAJR,OAQA,wBAAIA,UAAU,WACV,8BAAOH,EAAMa,Y,kDCgCVC,E,4MA1CXC,QAAUvB,IAAMC,Y,EAChBuB,SAAYxB,IAAMC,Y,EAClBwB,UAAazB,IAAMC,Y,EACnByB,QAAW1B,IAAMC,Y,EACjB0B,SAAW3B,IAAMC,Y,EAMjB2B,WAAa,SAAAC,GACTA,EAAEzB,iBAEF,IAAM0B,EAAO,CACTC,KAAM,EAAKR,QAAQjB,QACnB0B,MAAOC,WAAW,EAAKT,SAASlB,SAChC4B,OAAQ,EAAKT,UAAUnB,QACvB6B,KAAM,EAAKT,QAAQpB,QACnB8B,MAAO,EAAKT,SAASrB,SAEzB,EAAKE,MAAM6B,QAAQP,GACnBD,EAAES,cAAcC,S,4CAGpB,WAEI,OACI,0BAAM5B,UAAU,YAAWC,SAAUC,KAAKe,YACtC,2BAAQG,KAAM,OAAOhB,IAAMF,KAAKU,QAAQT,KAAK,OAAOG,YAAa,SACjE,2BAAQc,KAAM,QAAOhB,IAAMF,KAAKW,SAAUV,KAAK,OAAOG,YAAa,UACnE,4BAASc,KAAK,SAAShB,IAAKF,KAAKY,WAC7B,4BAAQlB,MAAM,aAAd,UACA,4BAAQA,MAAM,eAAd,cAEJ,2BAAQwB,KAAM,QAAQhB,IAAKF,KAAKc,SAAUb,KAAK,OAAOG,YAAa,UACnE,8BAAWc,KAAK,OAAOhB,IAAMF,KAAKa,QAAQZ,KAAK,OAAOG,YAAY,SAClE,4BAAQH,KAAK,UAAb,oB,GArCUd,IAAMmB,WC+DjBqB,E,4MAlDXC,aAAe,SAAAtC,GACXuC,QAAQC,IAAIxC,EAAMmC,cAAc/B,OAEhC,IAAMqC,EAAW,2BACV,EAAKpC,MAAMsB,MADD,IAEb,CAAC3B,EAAMmC,cAAcP,MAAM5B,EAAMmC,cAAc/B,QAEnD,EAAKC,MAAMqC,WAAW,EAAKrC,MAAMsC,MAAOF,I,4CAK5C,WAAU,IAAD,OACL,OAAO,yBAAKjC,UAAU,aAClB,2BACIG,KAAK,OACLiB,KAAK,OACLgB,SAAUlC,KAAK4B,aACflC,MAAOM,KAAKL,MAAMsB,KAAKC,OAE3B,2BACIjB,KAAK,OACLiB,KAAK,QACLgB,SAAUlC,KAAK4B,aACflC,MAAOM,KAAKL,MAAMsB,KAAKE,QAE3B,4BACIlB,KAAK,OACLiB,KAAK,SACLgB,SAAUlC,KAAK4B,aACflC,MAAOM,KAAKL,MAAMsB,KAAKI,QACvB,4BAAQ3B,MAAM,aAAd,UACA,4BAAQA,MAAM,eAAd,aAEJ,8BACIwB,KAAK,OACLgB,SAAUlC,KAAK4B,aACflC,MAAOM,KAAKL,MAAMsB,KAAKK,OAE3B,2BAAOrB,KAAK,OACRiB,KAAK,QACLgB,SAAUlC,KAAK4B,aACflC,MAAOM,KAAKL,MAAMsB,KAAKM,QAE3B,4BAAQY,QAAS,kBAAM,EAAKxC,MAAMyC,WAAW,EAAKzC,MAAMsC,SAAxD,oB,GAzDe9C,IAAMmB,W,iBCA3B+B,EAAcC,IAASC,cAAc,CACzCC,OAAQ,0CACRC,WAAY,yCACZC,YAAa,6DACbC,UAAW,yBACXC,cAAe,qCACfC,kBAAmB,eACnBC,MAAO,8CAOMC,EAJFC,IAAOC,YAAYZ,EAAYa,YCO7BC,EAjBD,SAACxD,GAAD,OACV,yBAAKG,UAAU,SACX,+CACA,wEACA,4BAAQA,UAAU,SAASqC,QAAS,kBAAMxC,EAAMyD,aAAa,YAA7D,qBAGA,4BAAQtD,UAAU,SAASqC,QAAS,kBAAMxC,EAAMyD,aAAa,YAA7D,uBCwFOC,E,4MAhFXC,MAAQ,CACJC,IAAK,KACLC,MAAO,M,EAWXC,Y,uCAAc,WAAOC,GAAP,eAAAC,EAAA,sEACUZ,EAAKa,MAAM,EAAKjE,MAAMkE,QAAS,CAAEC,QAAQ,iBADnD,UACJC,EADI,OAEVlC,QAAQC,IAAIiC,EAAMC,MAEbD,EAAMP,MAJD,gCAKAT,EAAKkB,KAAL,UAAa,EAAKtE,MAAMkE,QAAxB,UAAyC,CAC3CG,KAAMN,EAASQ,KAAKX,MANlB,OASV,EAAKY,SAAS,CACVZ,IAAKG,EAASQ,KAAKX,IACnBC,MAAOO,EAAMP,OAASE,EAASQ,KAAKX,MAX9B,2C,wDAcdH,aAAe,SAACgB,GACZ,IAAMC,EAAe,IAAI/B,IAASgC,KAAT,UAAiBF,EAAjB,kBACzB/B,EACKiC,OACAC,gBAAgBF,GAChBG,KAAK,EAAKf,c,EAGnBgB,O,sBAAS,sBAAAd,EAAA,6DACL9B,QAAQC,IAAI,eADP,SAECQ,IAASgC,OAAOI,UAFjB,OAGL,EAAKP,SAAS,CAAEZ,IAAK,OAHhB,2C,uDA9BT,WAAqB,IAAD,OAChBjB,IAASgC,OAAOK,oBAAmB,SAAAT,GAC3BA,GACA,EAAKT,YAAY,CAAES,c,oBAiC/B,WAAU,IAAD,OAECO,EAAS,4BAAQtC,QAASnC,KAAKyE,QAAtB,YAEf,OAAKzE,KAAKsD,MAAMC,IAIZvD,KAAKsD,MAAMC,MAAQvD,KAAKsD,MAAME,MAE1B,6BACI,0DACCiB,GAMT,yBAAK3E,UAAU,aACX,2CACC2E,EACAG,OAAOC,KAAK7E,KAAKL,MAAMmF,QAAQC,KAAI,SAAAC,GAAG,OACnC,kBAAC,EAAD,CACIA,IAAKA,EACL/C,MAAO+C,EACP/D,KAAM,EAAKtB,MAAMmF,OAAOE,GACxBhD,WAAY,EAAKrC,MAAMqC,WACvBI,WAAY,EAAKzC,MAAMyC,gBAG/B,kBAAC,EAAD,CAAaZ,QAASxB,KAAKL,MAAM6B,UACjC,4BAAQW,QAASnC,KAAKL,MAAMsF,kBAA5B,cA1BG,kBAAC,EAAD,CAAO7B,aAAepD,KAAKoD,mB,GAvDtBjE,IAAMmB,W,QC+Ef4E,E,4MA5EXC,YAAc,SAAAH,GACV,IAAM/D,EAAO,EAAKtB,MAAMmF,OAAOE,GACzBI,EAAQ,EAAKzF,MAAM0F,MAAML,GACzBM,EAAcrE,GAAwB,cAAhBA,EAAKI,OAEjC,OAAKJ,EAEAqE,EAYD,kBAAC,gBAAD,CACIC,WAAW,QACXP,IAAKA,EACLQ,QAAS,CAAEC,MAAO,IAAMC,KAAM,MAE9B,wBAAIV,IAAKA,GACL,8BACI,kBAAC,kBAAD,CAAiBW,UAAU,OAAO7F,UAAU,SACxC,kBAAC,gBAAD,CACIyF,WAAW,QACXP,IAAKI,EACLI,QAAS,CAAEC,MAAO,IAAMC,KAAM,MAE9B,8BAAON,KAPnB,OAWSnE,EAAKC,KACT9C,EAAYgH,EAAQnE,EAAKE,OAC1B,4BAAQgB,QAAS,kBAAM,EAAKxC,MAAMiG,gBAAgBZ,KAAlD,WA7BR,kBAAC,gBAAD,CACAO,WAAW,QACXP,IAAKA,EACLQ,QAAS,CAAEC,MAAO,IAAMC,KAAM,MAE9B,wBAAIV,IAAKA,GAAT,SAAqB/D,EAAOA,EAAKC,KAAO,OAAxC,sBATU,M,4CA2CtB,WAAU,IAAD,OACC2E,EAAWjB,OAAOC,KAAK7E,KAAKL,MAAM0F,OAClCS,EAAQD,EAASE,QAAO,SAACC,EAAWhB,GACtC,IAAM/D,EAAO,EAAKtB,MAAMmF,OAAOE,GACzBI,EAAQ,EAAKzF,MAAM0F,MAAML,GAE/B,OADoB/D,GAAwB,cAAhBA,EAAKI,OAEtB2E,EAAYZ,EAAQnE,EAAKE,MAE7B6E,IACR,GACH,OACI,yBAAKlG,UAAU,cACX,qCAEA,kBAAC,kBAAD,CAAiB6F,UAAU,KAAK7F,UAAU,SACrC+F,EAASd,IAAI/E,KAAKmF,cAGvB,yBAAKrF,UAAU,SAAf,SAEI,gCAAS1B,EAAY0H,U,GA5ErB3G,IAAMmB,WC8EXwE,EAlFA,CACbmB,MAAO,CACL/E,KAAM,kBACNK,MAAO,mBACPD,KACE,wFACFH,MAAO,KACPE,OAAQ,aAGV6E,MAAO,CACLhF,KAAM,UACNK,MAAO,sBACPD,KACE,iFACFH,MAAO,KACPE,OAAQ,aAGV8E,MAAO,CACLjF,KAAM,eACNK,MAAO,uBACPD,KACE,qGACFH,MAAO,KACPE,OAAQ,eAGV+E,MAAO,CACLlF,KAAM,YACNK,MAAO,mBACPD,KACE,kGACFH,MAAO,KACPE,OAAQ,aAGVgF,MAAO,CACLnF,KAAM,YACNK,MAAO,mBACPD,KACE,2EACFH,MAAO,KACPE,OAAQ,aAGViF,MAAO,CACLpF,KAAM,kBACNK,MAAO,qBACPD,KACE,0GACFH,MAAO,KACPE,OAAQ,aAGVkF,MAAO,CACLrF,KAAM,UACNK,MAAO,sBACPD,KAAM,oEACNH,MAAO,KACPE,OAAQ,aAGVmF,MAAO,CACLtF,KAAM,UACNK,MAAO,sBACPD,KACE,sFACFH,MAAO,IACPE,OAAQ,aAGVoF,MAAO,CACLvF,KAAM,eACNK,MAAO,qBACPD,KACE,8FACFH,MAAO,KACPE,OAAQ,cCxCGqF,E,4JArBX,WAAU,IAAD,SAGwC1G,KAAKL,MAAMgH,QAAhDpF,EAHH,EAGGA,MAAOL,EAHV,EAGUA,KAAMI,EAHhB,EAGgBA,KAAMH,EAHtB,EAGsBA,MACrBmE,EAAwB,aAJzB,EAG6BjE,OAGlC,OACI,wBAAIvB,UAAU,aACV,yBAAK8G,IAAKrF,EAAOsF,IAAK3F,IACtB,wBAAIpB,UAAU,aAAaoB,EACvB,0BAAMpB,UAAU,SAAS1B,EAAY+C,KAEzC,2BAAKG,GACL,4BAAQwF,UAAWxB,EAAanD,QAAS,kBAAM,EAAKxC,MAAMoH,WAAW,EAAKpH,MAAMsC,SAC3EqD,EAAc,eAAiB,iB,GA5BjCnG,IAAMmB,WC6HV0G,E,4MApHX1D,MAAQ,CACJwB,OAAQ,GACRO,MAAO,I,EAgCX7D,QAAU,SAAAP,GACN,IAAM6D,EAAM,eAAQ,EAAKxB,MAAMwB,QAC/BA,EAAO,OAAD,OAAQmC,KAAKC,QAAWjG,EAC9B,EAAKkD,SAAS,CACVW,Y,EAIR9C,WAAa,SAACgD,EAAKjD,GACf,IAAM+C,EAAM,eAAQ,EAAKxB,MAAMwB,QAC/BA,EAAOE,GAAOjD,EACd,EAAKoC,SAAS,CAAEW,Y,EAGpB1C,WAAa,SAAA4C,GACT,IAAMF,EAAM,eAAQ,EAAKxB,MAAMwB,QAC/BA,EAAOE,GAAO,KAEd,EAAKb,SAAS,CAACW,Y,EAGnBG,iBAAmB,WACf,EAAKd,SAAS,CAACW,OAAQqC,K,EAG3BJ,WAAa,SAAC/B,GACV,IAAMK,EAAK,eAAQ,EAAK/B,MAAM+B,OAC9BA,EAAML,GAAOK,EAAML,GAAO,GAAK,EAC/B,EAAKb,SAAS,CAAEkB,W,EAGpBO,gBAAkB,SAAAZ,GACd,IAAMK,EAAK,eAAQ,EAAK/B,MAAM+B,cACvBA,EAAML,GACb,EAAKb,SAAS,CAAEkB,W,uDA3DpB,WAAqB,IACT+B,EAAWpH,KAAKL,MAAM0H,MAAtBD,OACFE,EAAkBC,aAAaC,QAAQJ,EAAOvD,SAEhDyD,GACAtH,KAAKmE,SAAS,CAACkB,MAAOoC,KAAKC,MAAMJ,KAGrCtH,KAAKE,IAAM6C,EAAK4E,UAAL,UAAkBP,EAAOvD,QAAzB,WAA2C,CAClDC,QAAS9D,KACTsD,MAAO,a,gCAIf,WACIzB,QAAQC,IAAI9B,KAAKsD,MAAM+B,OACvBkC,aAAaK,QACT5H,KAAKL,MAAM0H,MAAMD,OAAOvD,QACxB4D,KAAKI,UAAU7H,KAAKsD,MAAM+B,U,kCAIlC,WACItC,EAAK+E,cAAc9H,KAAKE,O,oBAuC5B,WAAU,IAAD,OACL,OACI,yBAAKJ,UAAU,oBACX,yBAAKA,UAAU,QACX,kBAAC,EAAD,CAAQU,QAAQ,6BAChB,wBAAIV,UAAU,UACT8E,OAAOC,KAAK7E,KAAKsD,MAAMwB,QAAQC,KAC5B,SAAAC,GAAG,OACC,kBAAC,EAAD,CACIA,IAAKA,EACL/C,MAAO+C,EACP2B,QAAS,EAAKrD,MAAMwB,OAAOE,GAC3B+B,WAAY,EAAKA,kBAIrC,kBAAC,EAAD,CACIjC,OAAQ9E,KAAKsD,MAAMwB,OACnBO,MAAOrF,KAAKsD,MAAM+B,MAClBO,gBAAiB5F,KAAK4F,kBAE1B,kBAAC,EAAD,CACIpE,QAASxB,KAAKwB,QACdQ,WAAYhC,KAAKgC,WACjBI,WAAYpC,KAAKoC,WACjB6C,iBAAkBjF,KAAKiF,iBACvBH,OAAQ9E,KAAKsD,MAAMwB,OACnBjB,QAAS7D,KAAKL,MAAM0H,MAAMD,OAAOvD,e,GAnGnC1E,IAAMmB,WCJTyH,EANE,kBACb,6BACI,2CCWOC,EATA,kBACX,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAI1C,UAAW1G,IACjC,kBAACkJ,EAAA,EAAD,CAAOE,KAAK,kBAAkB1C,UAAWqB,IACzC,kBAACmB,EAAA,EAAD,CAAOxC,UAAWoC,O,MCI9BO,iBAAO,kBAAC,EAAD,MAAYC,SAASC,cAAc,Y","file":"static/js/main.32e0aa6f.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { getFunName } from '../helpers';\r\n\r\n\r\nclass StorePicker extends React.Component {\r\n    myInput = React.createRef();\r\n    static propTypes = {\r\n        history: PropTypes.object\r\n    }\r\n\r\n    goToStore = event => {\r\n        event.preventDefault();\r\n        const storeName = this.myInput.current.value;\r\n        this.props.history.push(`/store/${storeName}`);\r\n    }\r\n    render() {\r\n        return (\r\n            <form className='store-selector' onSubmit={this.goToStore}>\r\n                <h2>Enter Store name</h2>\r\n                <input\r\n                    type='text'\r\n                    ref={this.myInput}\r\n                    required placeholder=\"Store Name\"\r\n                    defaultValue={getFunName()}\r\n                />\r\n                <button type='submit'>Visit Store</button>\r\n            </form>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\n// const StorePicker = () => {\r\n//     const myInput = React.useRef();\r\n\r\n//     const goToStore = event => {\r\n        \r\n//         // 1. stop the form from submitting\r\n//         event.preventDefault();\r\n//         // 2. get the text from the input\r\n//             // use ref - this is used to reference the dom elements\r\n//         console.log(myInput.current);\r\n//         // 3. change the page to /store/whatever-they-entered\r\n        \r\n//     };\r\n//     return (\r\n        \r\n        \r\n//         <form className='store-selector' onSubmit={goToStore}>\r\n//                 <h2> enter store name</h2>\r\n                \r\n//                 <input type='text'\r\n//                     ref={myInput}\r\n//                     required placeholder='Store Name'\r\n//                     defaultValue={getFunName()}\r\n                    \r\n//                 />\r\n//                 <button type='submit' >Visit Store </button>\r\n//         </form>\r\n        \r\n//     )\r\n// }\r\n\r\nexport default StorePicker;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Header = (props) => (\r\n    <header className='top'>\r\n        <h1>\r\n            Catch\r\n             <span className='ofThe'>\r\n                <span className='of'>of</span>\r\n                <span className='the'>the</span>\r\n            </span>\r\n            Day\r\n        </h1>\r\n        <h3 className='tagline'>\r\n            <span>{props.tagline}</span>\r\n        </h3>\r\n    </header>\r\n)\r\n\r\nHeader.propTypes = {\r\n    tagline: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass AddFishForm extends React.Component {\r\n    nameRef = React.createRef();\r\n    priceRef  = React.createRef();\r\n    statusRef  = React.createRef();\r\n    descRef  = React.createRef();\r\n    imageRef = React.createRef();\r\n    \r\n    static propTypes = {\r\n        addFish: PropTypes.func\r\n    };\r\n\r\n    createFish = e => {\r\n        e.preventDefault();\r\n\r\n        const fish = {\r\n            name: this.nameRef.current,\r\n            price: parseFloat(this.priceRef.current),\r\n            status: this.statusRef.current,\r\n            desc: this.descRef.current,\r\n            image: this.imageRef.current\r\n        }\r\n        this.props.addFish(fish);\r\n        e.currentTarget.reset();\r\n        \r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <form className='fish-edit'onSubmit={this.createFish}>\r\n                < input name ='name' ref ={this.nameRef}type='text' placeholder ='name'/>\r\n                < input name ='price'ref ={this.priceRef} type='text' placeholder ='price'/>\r\n                < select name='status' ref={this.statusRef} >\r\n                    <option value='available'>Fresh!</option>\r\n                    <option value='unavailable'>Sold Out!</option>\r\n                </ select>\r\n                < input name ='image' ref={this.imageRef} type='text' placeholder ='image'/>\r\n                < textarea name='desc' ref ={this.descRef}type='text' placeholder='desc' />\r\n                <button type='submit'> + Add Fish</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddFishForm;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass EditFishForm extends React.Component {\r\n    static propTypes = {\r\n        fish: PropTypes.shape({\r\n            image: PropTypes.string,\r\n            name: PropTypes.string,\r\n            desc: PropTypes.string,\r\n            status: PropTypes.string,\r\n            price: PropTypes.number\r\n        }),\r\n        index: PropTypes.string,\r\n        update: PropTypes.func\r\n    }\r\n    \r\n    handleChange = event => {\r\n        console.log(event.currentTarget.value);\r\n\r\n        const updatedFish = {\r\n            ...this.props.fish,\r\n            [event.currentTarget.name]:event.currentTarget.value\r\n        };\r\n        this.props.updateFish(this.props.index, updatedFish)\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        return <div className='fish-edit'>\r\n            <input\r\n                type='text'\r\n                name='name'\r\n                onChange={this.handleChange}\r\n                value={this.props.fish.name}\r\n            ></input>\r\n            <input\r\n                type='text'\r\n                name='price'\r\n                onChange={this.handleChange}\r\n                value={this.props.fish.price}>\r\n            </input>\r\n            <select\r\n                type='text'\r\n                name='status'\r\n                onChange={this.handleChange}\r\n                value={this.props.fish.status}>\r\n                <option value='available'>Fresh!</option>\r\n                <option value='unavailable'>Sold Out</option>\r\n            </select>\r\n            <textarea\r\n                name='desc'\r\n                onChange={this.handleChange}\r\n                value={this.props.fish.desc}>\r\n            </textarea>\r\n            <input type='text'\r\n                name='image'\r\n                onChange={this.handleChange}\r\n                value={this.props.fish.image}>\r\n            </input>\r\n            <button onClick={() => this.props.deleteFish(this.props.index)}>\r\n                Remove fish\r\n            </button>\r\n        </div>\r\n    }\r\n}\r\nexport default EditFishForm;","import Rebase from 're-base';\r\nimport firebase from 'firebase';\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n  apiKey: \"AIzaSyCmkGFQJ7sTDdvWMCmJKOEtfSDEIEiqaks\",\r\n  authDomain: \"seans-catch-of-the-day.firebaseapp.com\",\r\n  databaseURL: \"https://seans-catch-of-the-day-default-rtdb.firebaseio.com\",\r\n  projectId: \"seans-catch-of-the-day\",\r\n  storageBucket: \"seans-catch-of-the-day.appspot.com\",\r\n  messagingSenderId: \"232405197035\",\r\n  appId: \"1:232405197035:web:eaaa44bd07f1ba28675eae\"\r\n})\r\n\r\nconst base = Rebase.createClass(firebaseApp.database());\r\n\r\nexport { firebaseApp };\r\n\r\nexport default base;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Login = (props) => (\r\n    <nav className=\"login\">\r\n        <h2>Inventory Login</h2>\r\n        <p>Sign in to manage your store's inventory.</p>\r\n        <button className='github' onClick={() => props.authenticate('Github')}>\r\n            Login with Github\r\n        </button>\r\n        <button className='github' onClick={() => props.authenticate('Github')}>\r\n            Login with Github\r\n        </button>\r\n    </nav>\r\n);\r\n\r\nLogin.propTypes = {\r\n    authenticate: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport firebase from 'firebase';\r\nimport AddFishForm from './AddFishForm';\r\nimport EditFishForm from './EditFishForm';\r\nimport base, { firebaseApp } from '../base';\r\nimport Login from './Login';\r\n\r\n\r\nclass Inventory extends React.Component {\r\n\r\n    static propTypes = {\r\n        fishes: PropTypes.object,\r\n        updateFish: PropTypes.func,\r\n        deleteFish: PropTypes.func,\r\n        loadSampleFishes: PropTypes.func\r\n    };\r\n\r\n    state = {\r\n        uid: null,\r\n        owner: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        firebase.auth().onAuthStateChanged(user => {\r\n            if (user) {\r\n                this.authHandler({ user });\r\n            }\r\n        })\r\n    }\r\n\r\n    authHandler = async (authData) => {\r\n        const store = await base.fetch(this.props.storeId, { context: this });\r\n        console.log(store.data);\r\n\r\n        if (!store.owner) {\r\n            await base.post(`${this.props.storeId}/owner`, {\r\n                data: authData.user.uid\r\n            });\r\n        }\r\n        this.setState({\r\n            uid: authData.user.uid,\r\n            owner: store.owner || authData.user.uid\r\n        });\r\n    }\r\n    authenticate = (propvider) => {\r\n        const authProvider = new firebase.auth[`${propvider}AuthProvider`]();\r\n        firebaseApp\r\n            .auth()\r\n            .signInWithPopup(authProvider)\r\n            .then(this.authHandler);\r\n    }\r\n\r\n    logout = async () => {\r\n        console.log('Logging Out');\r\n        await firebase.auth().signOut();\r\n        this.setState({ uid: null });\r\n    };\r\n\r\n    render() {\r\n\r\n        const logout = <button onClick={this.logout}>Log Out!</button>\r\n\r\n        if (!this.state.uid) {\r\n            return <Login authenticate={ this.authenticate}/>;\r\n        }\r\n\r\n        if (this.state.uid !== this.state.owner) {\r\n            return (\r\n                <div>\r\n                    <p>Sorry you are not the owner</p>\r\n                    {logout}\r\n                </div>\r\n            )\r\n        }\r\n        \r\n        return (\r\n            <div className='inventory'>\r\n                <h2> Inventory </h2>\r\n                {logout}\r\n                {Object.keys(this.props.fishes).map(key => (\r\n                    <EditFishForm\r\n                        key={key}\r\n                        index={key}\r\n                        fish={this.props.fishes[key]}\r\n                        updateFish={this.props.updateFish}\r\n                        deleteFish={this.props.deleteFish}\r\n                    />\r\n                ))}\r\n                <AddFishForm addFish={this.props.addFish} />\r\n                <button onClick={this.props.loadSampleFishes}>\r\n                    Load Fish\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Inventory;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { formatPrice } from '../helpers';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nclass Order extends React.Component {\r\n    static propTypes = {\r\n        fishes: PropTypes.object,\r\n        order: PropTypes.object,\r\n        removeFromOrder: PropTypes.func\r\n    }\r\n\r\n    renderOrder = key => {\r\n        const fish = this.props.fishes[key];\r\n        const count = this.props.order[key];\r\n        const isAvailable = fish && fish.status === 'available';\r\n        // make sure fish is loaded before continuing \r\n        if (!fish) return null;\r\n\r\n        if (!isAvailable) {\r\n            return (\r\n                <CSSTransition\r\n                classNames='order'\r\n                key={key}\r\n                timeout={{ enter: 3000, exit: 3000 }}\r\n            >\r\n                <li key={key}>sorry {fish ? fish.name : 'fish'} is not available</li>\r\n            </CSSTransition>\r\n            )\r\n        }\r\n        return (\r\n            <CSSTransition\r\n                classNames='order'\r\n                key={key}\r\n                timeout={{ enter: 3000, exit: 3000 }}\r\n            >\r\n                <li key={key}>\r\n                    <span>\r\n                        <TransitionGroup component='span' className='count'>\r\n                            <CSSTransition\r\n                                classNames='count'\r\n                                key={count}\r\n                                timeout={{ enter: 3000, exit: 3000 }}\r\n                            >\r\n                                <span>{count}</span>\r\n                            </CSSTransition>\r\n                        </TransitionGroup>\r\n                    \r\n                        lbs {fish.name}\r\n                        {formatPrice(count * fish.price)}\r\n                        <button onClick={() => this.props.removeFromOrder(key)}>\r\n                            &times;\r\n                        </button>\r\n                    </span>\r\n                </li>\r\n            </CSSTransition>\r\n            \r\n        );\r\n    };\r\n    \r\n    render() {\r\n        const orderIds = Object.keys(this.props.order);\r\n        const total = orderIds.reduce((prevTotal, key) => {\r\n            const fish = this.props.fishes[key];\r\n            const count = this.props.order[key];\r\n            const isAvailable = fish && fish.status === 'available';\r\n            if (isAvailable) {\r\n                return prevTotal + count * fish.price;\r\n            }\r\n            return prevTotal;\r\n        }, 0);\r\n        return (\r\n            <div className='order-wrap'>\r\n                <h2>Order</h2>\r\n\r\n                <TransitionGroup component='ul' className='order'>\r\n                    {orderIds.map(this.renderOrder)}\r\n                </TransitionGroup>\r\n\r\n                <div className='total'>\r\n                    Total:\r\n                    <strong>{formatPrice(total)}</strong>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Order;","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { formatPrice } from '../helpers';\r\n\r\nclass Fish extends React.Component {\r\n    static propTypes = {\r\n        details: PropTypes.shape({\r\n            image: PropTypes.string,\r\n            name: PropTypes.string,\r\n            desc: PropTypes.string,\r\n            status: PropTypes.string,\r\n            price: PropTypes.number,\r\n        }),\r\n        addToOrder: PropTypes.func,\r\n    }\r\n    // handleClick = () => {\r\n    //     this.props.addToOrder(this.props.index)\r\n    // }\r\n    render() {\r\n        // const image = this.props.details.image;\r\n        // const name = this.props.details.name;\r\n        const { image, name, desc, price, status } = this.props.details;\r\n        const isAvailable = status == 'available';\r\n\r\n        return (\r\n            <li className='menu-fish'>\r\n                <img src={image} alt={name}></img>\r\n                <h3 className='fish-name'>{name}\r\n                    <span className='price'>{formatPrice(price)}</span>\r\n                </h3>\r\n                <p>{ desc }</p>\r\n                <button disabled={!isAvailable} onClick={() => this.props.addToOrder(this.props.index)}>\r\n                    {isAvailable ? 'Add to order' : 'sold out'}\r\n                </button>\r\n            </li>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Fish;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Header from './Header';\r\nimport Inventory from './Inventory';\r\nimport Order from './Order';\r\nimport sampleFishes from '../sample-fishes';\r\nimport Fish from './Fish';\r\nimport base from '../base';\r\n\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        fishes: {},\r\n        order: {}\r\n    };\r\n\r\n    static propTypes = {\r\n        match: PropTypes.object\r\n    };\r\n\r\n    componentDidMount() {\r\n        const { params } = this.props.match;\r\n        const localStorageRef = localStorage.getItem(params.storeId);\r\n        \r\n        if (localStorageRef) {\r\n            this.setState({order: JSON.parse(localStorageRef)})\r\n        }\r\n\r\n        this.ref = base.syncState(`${params.storeId}/fishes`, {\r\n            context: this,\r\n            state: 'fishes'\r\n        });\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        console.log(this.state.order);\r\n        localStorage.setItem(\r\n            this.props.match.params.storeId,\r\n            JSON.stringify(this.state.order)\r\n        );\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        base.removeBinding(this.ref);\r\n    }\r\n    addFish = fish => {\r\n        const fishes = { ...this.state.fishes };\r\n        fishes[`fish${Date.now()}`] = fish;\r\n        this.setState({\r\n            fishes\r\n        });\r\n    };\r\n\r\n    updateFish = (key, updatedFish) => {\r\n        const fishes = { ...this.state.fishes }\r\n        fishes[key] = updatedFish;\r\n        this.setState({ fishes });\r\n    }\r\n\r\n    deleteFish = key => {\r\n        const fishes = { ...this.state.fishes };\r\n        fishes[key] = null;\r\n\r\n        this.setState({fishes})\r\n    }\r\n\r\n    loadSampleFishes = () => {\r\n        this.setState({fishes: sampleFishes})\r\n    }\r\n\r\n    addToOrder = (key) => {\r\n        const order = { ...this.state.order }\r\n        order[key] = order[key] + 1 || 1;\r\n        this.setState({ order });\r\n    }\r\n\r\n    removeFromOrder = key => {\r\n        const order = { ...this.state.order }\r\n        delete order[key];\r\n        this.setState({ order });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='catch-of-the-day'>\r\n                <div className='menu'>\r\n                    <Header tagline='We have the best seafood' />\r\n                    <ul className='fishes'>\r\n                        {Object.keys(this.state.fishes).map(\r\n                            key => (\r\n                                <Fish\r\n                                    key={key}\r\n                                    index={key}\r\n                                    details={this.state.fishes[key]}\r\n                                    addToOrder={this.addToOrder} />\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n                <Order\r\n                    fishes={this.state.fishes}\r\n                    order={this.state.order}\r\n                    removeFromOrder={this.removeFromOrder}\r\n                />\r\n                <Inventory\r\n                    addFish={this.addFish}\r\n                    updateFish={this.updateFish}\r\n                    deleteFish={this.deleteFish}\r\n                    loadSampleFishes={this.loadSampleFishes}\r\n                    fishes={this.state.fishes}\r\n                    storeId={this.props.match.params.storeId}\r\n                />\r\n            \r\n                \r\n            {/* <!-- The core Firebase JS SDK is always required and must be listed first --> */}\r\n{/* <script src=\"/__/firebase/8.4.1/firebase-app.js\"></script> */}\r\n\r\n{/* <!-- TODO: Add SDKs for Firebase products that you want to use \r\n     https://firebase.google.com/docs/web/setup#available-libraries */}\r\n\r\n{/* <!-- Initialize Firebase --> */}\r\n{/* <script src=\"/__/firebase/init.js\"></script> */}\r\n            </div>  \r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default App;","import React from 'react';\r\n\r\nconst NotFound = () => (\r\n    <div>\r\n        <h2>Not Found</h2>\r\n    </div>\r\n);\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport StorePicker from './StorePicker';\r\nimport App from './App';\r\nimport NotFound from './NotFound'\r\n\r\nconst Router = () => (\r\n    <BrowserRouter>\r\n        <Switch>\r\n            <Route exact path='/' component={StorePicker} />\r\n            <Route path='/store/:storeId' component={App} />\r\n            <Route component={NotFound} />\r\n        </Switch>\r\n    </BrowserRouter>\r\n);\r\nexport default Router;","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport Router from './components/Router'\r\nimport './css/style.css';\r\n\r\n\r\n\r\n/* <!-- The core Firebase JS SDK is always required and must be listed first -->\r\n<script src=\"/__/firebase/8.4.1/firebase-app.js\"></script>\r\n\r\n<!-- TODO: Add SDKs for Firebase products that you want to use\r\n     https://firebase.google.com/docs/web/setup#available-libraries -->\r\n\r\n<!-- Initialize Firebase -->\r\n<script src=\"/__/firebase/init.js\"></script> */\r\nrender(<Router />, document.querySelector('#main'))\r\n\r\n\r\n\r\n"],"sourceRoot":""}